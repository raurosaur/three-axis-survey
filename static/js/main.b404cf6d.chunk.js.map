{"version":3,"sources":["Components/Question.js","App.js","index.js"],"names":["Question","className","this","props","question","options","map","option","index","name","type","id","data-key","required","htmlFor","Math","random","Component","App","state","libertarian","progressive","conservative","questions","toShow","setState","data","e","preventDefault","score","answerKey","el","answer","answers","Array","from","document","querySelectorAll","filter","checked","attributes","value","c","l","p","i","length","val","console","log","key","title","color","label","dataEntry","round","percentage","labelStyle","fontSize","fill","fontFamily","fontWeight","labelPosition","lineWidth","onClick","btnClick","href","ReactDOM","render","getElementById"],"mappings":"uNAEqBA,E,uKAEb,OACI,sBAAKC,UAAY,WAAjB,UACI,6BAAKC,KAAKC,MAAMC,WAChB,+BACKF,KAAKC,MAAME,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACpB,gCACI,uBAAOC,KAAO,QAAQC,KAAO,QAAQC,GAAMJ,EAAsBK,WAAYJ,EAAOK,UAAQ,GAAlCL,GAC1D,uBAAOM,QAAWP,EAAlB,SAA2BA,MAFnBQ,KAAKC,sB,GAPHC,a,cCmFvBC,E,4MA/EbC,MAAQ,CACNC,YAAa,EACbC,YAAa,EACbC,aAAc,EACdC,UAAW,GACXC,QAAQ,G,kEAIRtB,KAAKuB,SAAS,CAACF,UAAWG,M,+BAGnBC,GACPA,EAAEC,iBACF1B,KAAKuB,SAAS,CAACD,QAAStB,KAAKiB,MAAMK,SACnCtB,KAAK2B,U,8BAUL,IANA,IAAMC,EAAY5B,KAAKiB,MAAMI,UAAUjB,KAAI,SAAAyB,GAAE,OAAIA,EAAGC,UACpDC,EAAUC,MAAMC,KAAKC,SAASC,iBAAiB,wBAC9CC,QAAO,SAAAP,GAAE,OAAIA,EAAGQ,WAASjC,KAAI,SAAAyB,GAAE,OAAIA,EAAGS,WAAW,YAAYC,SAE1DC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAEdC,EAAI,EAAGA,EAAGZ,EAAQa,OAAQD,IAAI,CACpC,IAAME,EAAMjB,EAAUe,GAAGZ,EAAQY,IACtB,MAARE,EAAYL,IACC,MAARK,EAAaJ,IAChBC,IAGP1C,KAAKuB,SAAS,CAACJ,YAAauB,EAAEtB,aAAcoB,EAAEtB,YAAauB,M,+BAGpD,IAAD,SACgEzC,KAAKiB,MAAnEI,EADF,EACEA,UAAWH,EADb,EACaA,YAAaE,EAD1B,EAC0BA,aAAeD,EADzC,EACyCA,YAAaG,EADtD,EACsDA,OAE5D,OADAwB,QAAQC,IAAI5B,GAEV,sBAAKpB,UAAU,YAAf,UACA,gDACA,oCACGuB,EACAD,EAAUjB,KAAI,SAAAyB,GAAE,OAAK,cAAC,EAAD,CAAU3B,SAAY2B,EAAG3B,SAAUC,QAAW0B,EAAG1B,SAAgB0B,EAAGmB,QAExF,sBAAKjD,UAAY,SAAjB,UACE,sBAAKA,UAAY,QAAjB,UACE,qBAAKA,UAAY,aACjB,qBAAKA,UAAY,OAAjB,0BACA,qBAAKA,UAAU,aACf,qBAAKA,UAAY,OAAjB,yBACA,qBAAKA,UAAU,aACf,qBAAKA,UAAY,OAAjB,4BAEF,cAAC,WAAD,CACEyB,KAAQ,CACF,CAAEyB,MAAO,cAAeV,MAAOpB,EAAa+B,MAAO,WACnD,CAAED,MAAO,eAAgBV,MAAOnB,EAAc8B,MAAO,WACrD,CAAED,MAAO,cAAeV,MAAOrB,EAAagC,MAAO,YAEzDC,MAAO,gBAAGC,EAAH,EAAGA,UAAH,gBAAsBvC,KAAKwC,MAAMD,EAAUE,YAA3C,OACPC,WAAc,CAACC,SAAU,MAAOC,KAAM,OAAQC,WAAY,YAAaC,WAAY,OACnFC,cAAiB,GACjBC,UAAW,QAKjB,wBAAQC,QAAW,SAACrC,GAAD,OAAO,EAAKsC,SAAStC,IAAxC,SAA6CH,EAAS,SAAU,mBAElE,mCACA,mDACI,8CAAgB,mBAAG0C,KAAM,+BAAT,oC,GAzERjD,a,MCAlBkD,IAASC,OAAO,cAAC,EAAD,IACdhC,SAASiC,eAAe,U","file":"static/js/main.b404cf6d.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nexport default class Question extends Component{\n    render(){\n        return(\n            <div className = 'question'>\n                <h3>{this.props.question}</h3>\n                <form>\n                    {this.props.options.map((option, index) => (\n                        <div key = {Math.random()}>\n                            <input name = 'group' type = 'radio' id = {option} key = {index} data-key = {index} required/>\n                            <label htmlFor = {option}>{option}</label>\n                        </div>\n                    ))}\n                </form>\n            </div>\n        );\n    }\n}","import { Component } from \"react\";\nimport Question from \"./Components/Question\";\nimport * as data from './questions.json';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nclass App extends Component {\n  state = {\n    libertarian: 3,\n    progressive: 3,\n    conservative: 3,\n    questions: [],\n    toShow: true\n  }\n\n  componentDidMount(){\n    this.setState({questions: data.default});\n  }\n\n  btnClick(e){\n    e.preventDefault();\n    this.setState({toShow: !this.state.toShow});\n    this.score();\n  }\n\n  score(){\n    const answerKey = this.state.questions.map(el => el.answer),\n    answers = Array.from(document.querySelectorAll('input[type=\"radio\"]'))\n    .filter(el => el.checked).map(el => el.attributes[\"data-key\"].value);\n\n    let c = 0, l = 0, p = 0;\n\n    for(let i = 0; i< answers.length; i++){\n      const val = answerKey[i][answers[i]];\n      if(val === 'c')c++;\n      else if(val === 'l') l++;\n      else p++;\n    }\n\n    this.setState({progressive: p,conservative: c,libertarian: l});\n  }\n\n  render(){ \n    const { questions, libertarian, conservative,  progressive, toShow} = this.state;\n    console.log(progressive);\n    return (\n      <div className='container'>\n      <h1>The Three Axis</h1>\n      <section>\n        {toShow ?\n         questions.map(el => (<Question question = {el.question} options = {el.options} key = {el.key} />))\n        : (\n          <div className = 'result'>\n            <div className = 'label'>\n              <div className = 'box box1'></div>\n              <div className = 'tag1'>Conservative</div>\n              <div className='box box2'></div>\n              <div className = 'tag2'>Progressive</div>\n              <div className='box box3'></div>\n              <div className = 'tag3'>Libertarian</div>\n            </div>\n            <PieChart\n              data = {[\n                    { title: 'Progressive', value: progressive, color: '#00A3FF' },\n                    { title: 'Conservative', value: conservative, color: '#FF0000' },\n                    { title: 'Libertarian', value: libertarian, color: '#E7DE0E' },\n              ]}\n              label={({ dataEntry }) => `${Math.round(dataEntry.percentage)} %`}\n              labelStyle = {{fontSize: '6px', fill: '#FFF', fontFamily: 'Quicksand', fontWeight: '800'}} \n              labelPosition = {85}\n              lineWidth={30} \n            />\n          </div>\n        )\n        }\n        <button onClick = {(e) => this.btnClick(e)}>{toShow ? 'Submit': 'Retake Quiz'}</button>\n      </section>\n      <footer>\n      <div>Â©Arnold Kling</div>\n          <div>Created by <a href= 'https://github.com/raurosaur'>raurosaur</a></div>\n      </footer>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style/index.scss\";\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}